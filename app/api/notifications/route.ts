import { NextRequest, NextResponse } from 'next/server';import { createClient } from '@supabase/supabase-js';export async function GET(req:NextRequest){const user_id=new URL(req.url).searchParams.get('user_id');if(!user_id)return NextResponse.json({error:'Missing user_id'},{status:400});const sb=createClient(process.env.SUPABASE_URL as string, process.env.SUPABASE_SERVICE_KEY as string);const {data,error}=await sb.from('notifications').select('*').eq('user_id',user_id).order('created_at',{ascending:false}).limit(50);if(error)return NextResponse.json({error:error.message},{status:400});return NextResponse.json({notifications:data})}export async function PUT(req:NextRequest){const {ids=[],user_id}=await req.json();if(!user_id||!Array.isArray(ids))return NextResponse.json({error:'Missing user_id/ids'},{status:400});const sb=createClient(process.env.SUPABASE_URL as string, process.env.SUPABASE_SERVICE_KEY as string);const {error}=await sb.from('notifications').update({read_at:new Date().toISOString()}).in('id',ids).eq('user_id',user_id);if(error)return NextResponse.json({error:error.message},{status:400});return NextResponse.json({ok:true})}