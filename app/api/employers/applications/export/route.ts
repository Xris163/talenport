import { NextRequest, NextResponse } from 'next/server';import { createClient } from '@supabase/supabase-js';export async function GET(req:NextRequest){const url=new URL(req.url);const company_id=url.searchParams.get('company_id');if(!company_id)return new NextResponse('Missing company_id',{status:400});const sb=createClient(process.env.SUPABASE_URL as string, process.env.SUPABASE_SERVICE_KEY as string);const {data,error}=await sb.from('applications').select('id,created_at,status,note,cv_url,candidate_id, jobs!inner(title)').eq('jobs.company_id',company_id).order('created_at',{ascending:false});if(error)return new NextResponse(error.message,{status:400});const header=['id','created_at','job_title','candidate_id','status','cv_url','note'];const rows=(data||[]).map((a:any)=>[a.id,a.created_at,a.jobs?.title||'',a.candidate_id,a.status,a.cv_url||'',String(a.note||'').replace(/\n/g,' ')]);const csv=[header.join(','),...rows.map(r=>r.map(v=>`"${String(v).replace(/"/g,'""')}"`).join(','))].join('\n');return new NextResponse(csv,{headers:{'Content-Type':'text/csv','Content-Disposition':'attachment; filename=applications.csv'}})}