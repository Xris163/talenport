import { NextRequest, NextResponse } from 'next/server';import { createClient } from '@supabase/supabase-js';import { Resend } from 'resend';const resend=new Resend(process.env.RESEND_API_KEY as string);export async function POST(req:NextRequest){const { job_id, candidate_id, cv_url, note } = await req.json();if(!job_id||!candidate_id)return NextResponse.json({error:'Missing job_id/candidate_id'},{status:400});const sb=createClient(process.env.SUPABASE_URL as string, process.env.SUPABASE_SERVICE_KEY as string);const {data,error}=await sb.from('applications').insert({job_id,candidate_id,cv_url,note}).select('id,created_at').single();if(error)return NextResponse.json({error:error.message},{status:400});try{const {data:info}=await sb.from('jobs').select('title, companies(owner_user_id)').eq('id',job_id).single();if(info?.companies?.owner_user_id){const {data:owner}=await sb.auth.admin.getUserById(info.companies.owner_user_id);const to=(owner as any)?.user?.email;if(to&&process.env.NOTIFY_FROM_EMAIL){await resend.emails.send({from:process.env.NOTIFY_FROM_EMAIL,to,subject:`Nová žiadosť: ${info.title}`,html:`<p>CV: ${cv_url||'—'}<br/>Poznámka: ${note||'—'}</p>`});}}}catch{}return NextResponse.json({ok:true,id:data.id})}